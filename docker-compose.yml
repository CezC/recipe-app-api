version: "3.9"
# version of yamal file

# main block of docker compose file service needed for our app
services: 
  # name of our first servce is app
  app:
    # build docker file inside our current directory
    build:
      context: .
      # create new arguement and set it to true
      # overwrite false form Dockerfile
      args:
        - DEV=true
    # ports tcp
    ports:
      - "8000:8000"
    # map app folder form our directory to our /app folder in our container
    volumes:
      - ./app:/app
    
    # run our app service with this command
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    
    environment:
      # we use docker compose so we can use service name (db) as HOST name our app service (django) know
      - DB_HOST=db
      # the same as environamet variables for db
      - POSTGRES_DB=devdb
      - POSTGGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme      
    
    # wait for db first if db fail shut down app
    depends_on:
      - db
  
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # Db for local development 
    environment:
      - POSTGRES_DB=devdb
      - POSTGGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:
  # store named voulume in default location in our docker
  dev-db-data:


#           BEFORE DB
# it will build our docker image.
# docker compose build

# run flake 8 in our container
# docker compose run --rm app sh -c "flake8"


# create django project
# docker compose run --rm app sh -c "django-admin startproject app ."


# run project with docker compose
# docker compose up



#           AFTER DB 
# we can just up our container
# docker compose up

# we create new app to add to it wait for postgresql service finnish to start we call this app core 
# docker compose run --rm app sh -c "python manage.py startapp core"
# in core app we delete 
# tests.py
# views.py - will not serve views it will store models
# we create new dir
# tests
#   __init__.py

# we open app/app/settings.py
# we add our core app to  
# INSTALLED_APPS = [
#   ...
# 'core',
# ]
# tomake sure it is installed in our project